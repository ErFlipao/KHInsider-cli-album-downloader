#!/bin/bash

################################################################################
# Help                                                                         #
################################################################################
Help()
{
   # Display Help
   echo 'Simple script for the purpose of downloading all songs of an album in KHInsider without the need of an account or permission to the "Download all songs at once" feature.'
   echo
   echo "Syntax: khicad [-h | options]"
   echo "options:"
   echo "h     Print this Help"
   echo "u	   Url of the album to download"
   echo "n     Name of the folder to which the songs will be downloaded to (This folder does not need to exists prior to execution)"
   echo "f     Format of the songs (mp3, flac, m4a, etc.)"
   echo
}

################################################################################
################################################################################
# Main program                                                                 #
################################################################################
################################################################################

# Import dotenv
set -a; source "$(dirname "$0")/".env; set +a

# Define show and hide cursor functions
show_cursor() {
	tput cnorm
	exit
}

hide_cursor(){
	tput civis
}

# Read supplied arguments
while getopts ":h":u:n:f: option; do
   case $option in
    h)
	  Help
	  exit;;
    u)
      albumurl=${OPTARG};;
    n)
      albumname=${OPTARG};;
    f)
      format=${OPTARG};;
    ?)
      echo "script usage: khicad [-h | [-u album_url] [-n album_name] [-f file_format]]" >&2
      exit 1
      ;;
  esac
done

if [ -z "${albumurl+x}" ] || [ -z "${albumname+x}" ] || [ -z "${format+x}" ]; then
      echo "script usage: khicad [-h | [-u album_url] [-n album_name] [-f file_format]]" >&2
      exit 1
fi

# Extract urls of the songs in the album
urls=$(curl -s "$albumurl" | grep -oiE "/game-soundtracks/album/.*.mp3" | uniq | xargs -I{} echo "https://downloads.khinsider.com{}")
if [ "${urls[0]}" == "" ]; then
	echo "$(tput bold)$(tput setaf 1)Invalid url$(tput sgr0)" >&2
	exit 1
fi

# Hide cursor and set up TERM catch
trap show_cursor INT TERM
hide_cursor

# Create the folder for the songs
albumdir="$ROOT_DOWNLOAD_DIR$albumname"
mkdir -p "$albumdir"

# Loop over the songs and download the files
counter=0
totalsongs=$(echo "$urls" | wc -l)
for url in $urls;
do
	songlink=$(curl -s "$url" | grep -o "https://vgmsite.com/soundtracks/.*.$format" | uniq)

	if [ "${songlink}" == "" ]; then
		echo "$(tput bold)$(tput setaf 1)Invalid file format$(tput sgr0)" >&2
		show_cursor
	fi
	
	counter=$((counter+1))
	songnumber=$(printf "%0"${#totalsongs}"d" $counter)
	
	songname="$songnumber $(curl -s "$url" | grep -o "Song.name:.<b>.*</b>" | cut -d\< -f2 | cut -d\> -f2).$format"
	progress="$counter/$totalsongs"
	echo -ne "$(tput setaf 2)$(tput bold)$progress$(tput sgr0) | $(tput setaf 2)Downloading song: $songname$(tput sgr0)\033[0K\r"

	curl "$songlink" --output-dir "$albumdir" --output "$songname" --silent
done

echo
echo "DONE"
echo "Songs saved in $albumdir"
# Restore cursor
show_cursor
